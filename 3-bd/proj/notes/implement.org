#+TITLE: Implement PSQL Project
#+AUTHOR: Adrian

* Installation and first setup
Resource: [[https://wiki.archlinux.org/index.php/PostgreSQL#Create_your_first_database/user][ArchWiki]].

- Install with package manager:
#+BEGIN_SRC sh
  $ sudo pacman -S postgresql
#+END_SRC

The installation with create a user =postgres= with password =postgres=.
So any operations on the databases, unless changing the defaults, should
be done as the =postgres= user. Switch to that user (provided your current
user is in the =sudoers= list) with:

#+BEGIN_SRC sh
  $ sudo -iu postgress

  # alternative
  $ su -l postgres
#+END_SRC

As the =postgres= user, initialize the database cluster:

#+BEGIN_SRC sh
  # initialize the database cluster,
  # in the default location
  [postgres]$ initdb -D /var/lib/postgres/data

  # if you want to specify the locale and not use the default
  # `$LANG', initialize with
  [postgres]$ initdb --locale=en_US.UTF-8 -E UTF8 -D /var/lib/postgres/data

  # ... some output ...
  # should finish with ... ok
  # Success. You can now start the database server using
  # pg_ctl -D /var/lib/postgres/ -l logfile start
#+END_SRC

If using =systemd=, the =postgresql= service should be enabled and started:

#+BEGIN_SRC sh
  $ sudo systemctl enable postgresql
  $ sudo systemctl start postgresql
#+END_SRC

* Create the database and a user
#+BEGIN_SRC sh
  $ sudo -iu postgres
  [postgres]$ createuser --interactive
  # a prompt should appear to select role and
  # whether or not use password

  # create a database for that user created above
  [postgres]$ createdb -O theUser myDatabaseName

  # if the user that was created is not allowed to create a database,
  # create it as the postgres user, with
  [postgres]$ createdb -U postgres -O theUser myDatabaseName
#+END_SRC

* Start the =psql= shell and do whatever
#+BEGIN_SRC sh
  $ sudo -iu postgres
  [postgres]$ psql -d myDatabaseName

  # you're now connected to myDatabaseName
#+END_SRC

Basic commands:
#+BEGIN_SRC sh
  # Meta commands for the PSQL shell
  => \help			# get help
  => \c <database>	# connect to <database>
  => \du				# list users and permissions
  => \dt				# list tables and permissions
  => \q				# quit
  => \?				# see all meta-commands
#+END_SRC

* Further
See [[file://psql-notes.org][PSQL-Notes.org]].
* TODO Security stuff
** DONE =pgcrypto= for MD5 hashes
- [[https://www.postgresql.fastware.com/blog/further-protect-your-data-with-pgcrypto][tutorial 1]];
** DONE Triggers for auto updating
- [[https://www.postgresqltutorial.com/creating-first-trigger-postgresql/][postgresqltutorial]];
- [[https://www.tutorialspoint.com/postgresql/postgresql_triggers.htm][tutorialspoint]];
** TODO =pgaudit= for auditing
- [[https://info.crunchydata.com/blog/pgaudit-auditing-database-operations-part-1][general description & examples]];
- [[https://github.com/pgaudit/pgaudit/blob/master/README.md][pgaudit official doc]];
- [[https://severalnines.com/database-blog/postgresql-audit-logging-best-practices][audit logging best practices]];
- [[http://www.dbaglobe.com/2017/07/install-and-configure-pgaudit-in.html][install and configure pgaudit]];
- [[https://blog.dbi-services.com/auditing-in-postgresql/][general info]];
** TODO Managing users and roles
- [[https://aws.amazon.com/blogs/database/managing-postgresql-users-and-roles/][aws tutorial]];
- [[https://severalnines.com/database-blog/postgresql-privileges-user-management-what-you-should-know][privileges and user management]];
** TODO Data masking to hide info
- [[https://www.cybertec-postgresql.com/en/products/data-masking-for-postgresql/][general info]];
- [[https://blog.dbi-services.com/masking-data-with-postgresql/][data masking]];
- [[https://www.postgresql.eu/events/fosdem2019/sessions/session/2287/slides/151/postgresql_anonymizer.reveal..pdf][slides]];
- [[https://blog.taadeem.net/english/2018/10/29/Introducing-PostgreSQL-Anonymizer][psql anonymizer]];
- [[https://pgxn.org/dist/postgresql_anonymizer/][psql anonymizer website]];
- [[psql anonymizer readthedocs]];
- [[https://github.com/rpobulic/pg-mask][pg-maks github]];
